#!groovy

@Library("Infrastructure")

def type = "angular"
def product = "darts"
def component = "portal"

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)
def branchesToSync = ['demo', 'perftest']

withPipeline(type, product, component) {
  enableSlackNotifications('#darts-builds')
  disableCleanupOfHelmReleaseOnFailure()

  afterAlways('smokeTest:dev') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'smoke-output/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'cypress/screenshots/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'cypress/videos/**/*'
  }

  afterAlways('smokeTest:stg') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'smoke-output/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'cypress/screenshots/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'cypress/videos/**/*'
  }

  afterAlways('functionalTest:dev') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'cypress/screenshots/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'cypress/videos/**/*'

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "functional-output/functional",
      reportFiles          : "functional-test-result.html",
      reportName           : "Functional Test Report"
    ]
  }

  afterAlways('functionalTest:stg') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'cypress/screenshots/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'cypress/videos/**/*'

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "functional-output/functional",
      reportFiles          : "functional-test-result.html",
      reportName           : "Functional Test Report"
    ]
  }

  syncBranchesWithMaster(branchesToSync)
}