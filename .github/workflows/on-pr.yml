---
name: PR Tasks
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
permissions:
  id-token: write
  contents: read
jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
      - run: >
          mediaSignInUrl="https://darts-pr-${PR_NUMBER}.dev.apps.hmcts.net/auth/callback"
          targetAppName="darts-stg"
          appId="dec3be30-6325-4335-b898-eb01985d6c90"

          # Azure login
          az login --service-principal --username "${{ secrets.SP_CLIENT_ID }}" --password "${{ secrets.SP_SECRET_KEY }}" --tenant "${{ secrets.SP_TENANT_ID }}" --allow-no-subscriptions

          # Show account details (for debugging purposes)
          az account show

          echo "App ID: $appId"

          # Get the reply URLs
          replyUrls=$(az ad app show --id "$appId" --query "web.redirectUris" -o json --only-show-errors)
          echo "Found Reply URLs: $replyUrls"

          # Initialize replyUrlString
          replyUrlString=""

          # Process reply URLs
          if [[ "${replyUrls}" =~ "${mediaSignInUrl}" && -n "${replyUrls}" ]]; then
              echo "Reply URLs already contain $mediaSignInUrl"
          else
              # If replyUrls is empty or null, initialize replyUrlString as an array
              if [ -z "$replyUrls" ] || [ "$replyUrls" == "null" ]; then
                  replyUrlString="\"$mediaSignInUrl\""
              else
                  # Otherwise, append to the existing URLs
                  readarray -t my_array < <(echo "$replyUrls" | jq -r '.[]')
                  for item in "${my_array[@]}"; do
                      replyUrlString="${replyUrlString}\"$item\","
                  done

                  # Add the new URL if it's not already present
                  if [[ ! "${replyUrls}" =~ "${mediaSignInUrl}" ]]; then
                      replyUrlString="${replyUrlString}\"$mediaSignInUrl\""
                  else
                      # Remove the trailing comma if not appended
                      replyUrlString="${replyUrlString%,}"
                  fi
              fi
          fi

          # Wrap the replyUrlString in square brackets to form a valid JSON array
          replyUrlString="[$replyUrlString]"

          # Output the final replyUrlString for debugging
          echo "Final replyUrlString: $replyUrlString"

          # Get Object ID (already have appId, so no need to search by name again)
          objectId=$(az ad app list --all --query "[?appId=='$appId'].id | [0]" -o tsv --only-show-errors)
          objectId=${objectId//[$'\t\r\n']/}
          echo "Object ID: $objectId"

          # Construct the REST URL
          restUrl="https://graph.microsoft.com/v1.0/applications/$objectId"
          echo "Calling: $restUrl"

          # Make the PATCH request to update the redirect URIs
          az rest --method PATCH --header "Content-Type=application/json" --uri "$restUrl" --body "{\"web\":{\"redirectUris\":$replyUrlString}}" --debug

      - run: >
          adminSignInUrl="https://darts-pr-${PR_NUMBER}.dev.apps.hmcts.net/auth/-logout-callback"

          targetAppName="darts-stg"


          az login --service-principal --username ${{ secrets.B2C_AZURE_CLIENT_ID}} -p=${{ secrets.B2C_AZURE_CLIENT_SECRET}} --tenant ${{ secrets.B2C_AZURE_TENANT_ID}} --allow-no-subscriptions

          az account show


          appId=$(az ad app list --all --filter "displayname eq '${targetAppName}'" --query "[0].appId" -o tsv --only-show-errors )

          appId=${appId//[$'\t\r\n']/}

          echo "App ID $appId"


          az ad app show --id "$appId"

          replyUrls=$(az ad app show --id "$appId" --query "web.redirectUris" -o json --only-show-errors)


          echo "Found Reply URLs"

          echo $replyUrls


          if [[ "${replyUrls}" =~ "${adminSignInUrl}" && "${replyUrls}"]]; then
            echo "Reply URLs contain $adminSignInUrl"
          elif [ -z $replyUrls ]; then
            echo "No Reply URLs Found. ISSUE!!"
          else
            readarray -t my_array < <(echo "$replyUrls" | jq -c '.[]')
            for item in "${my_array[@]}"; do
              echo "Url: $item"
              replyUrlString+="$item,"
            done

            if [[ ! "${replyUrls}" =~ "${adminSignInUrl}" ]]; then
              if [[ ! ${replyUrlString: -1} == "," ]]; then
                replyUrlString+=","
              fi
              replyUrlString+="\"$adminSignInUrl\""
            fi

            echo "reply String: $replyUrlString"

            objectId=$(az ad app list --all --filter "displayname eq '${targetAppName}'" --query "[0].id" -o tsv --only-show-errors)
            objectId=${objectId//[$'\t\r\n']/}
            echo "Object ID $objectId"
            restUrl="https://graph.microsoft.com/v1.0/applications/${objectId//[$'\t\r\n']/}"
            echo "Calling: $restUrl"
            az rest --method PATCH --header "Content-Type=application/json" --uri $restUrl --body "{\"web\":{\"redirectUris\":[$replyUrlString]}}" #--debug
          fi
        env:
          PR_NUMBER: ${{ github.event.number }}